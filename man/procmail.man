.Id $Id: procmail.man,v 1.25 1993/07/21 18:59:38 berg Exp $
.TH PROCMAIL 1 \*(Dt BuGless
.na
.SH NAME
procmail \- autonomous mail processor
.SH SYNOPSIS
.B procmail
.RB [ \-@PRESERVOPT@@TEMPFAILOPT@ ]
.RB [ "\-@FROMWHOPT@ \fIfromwhom\fP" ]
.RI [ "parameter\fB=\fPvalue " | " rcfile" ]
\&.\|.\|.
.br
.B procmail
.RB [ \-@PRESERVOPT@@TEMPFAILOPT@ ]
.RB [ "\-@FROMWHOPT@ \fIfromwhom\fP" ]
.RB [ "\-@ARGUMENTOPT@ \fIargument\fP" ]
.B \-@DELIVEROPT@
.I recipient
\&.\|.\|.
.br
.B procmail
.RB [ \-@PRESERVOPT@@TEMPFAILOPT@ ]
.B \-@MAILFILTOPT@
.RI [ "parameter\fB=\fPvalue" ]
\&.\|.\|.
.I rcfile mail_from rcpt_to
\&.\|.\|.
.br
.B procmail
.B \-@VERSIONOPT@
.ad
.Sh DESCRIPTION
For a quick start, see
.B NOTES
at the end.
.PP
.B Procmail
should be invoked automatically over the
.B @DOT_FORWARD@
file mechanism as soon as mail arrives.  Alternatively, when installed by
a system administrator, it can be invoked from within the mailer immediately.
When invoked, it first sets some environment variables to default values,
reads the mail message from stdin until an EOF, separates the body from the
header, and then, if no command line arguments are present, it starts to look
for a file named
.B @PROCMAILRC@
in your home directory.  According to the processing recipes in this file,
the mail message that just arrived gets distributed into the right folder
(and more).
.PP
If running suid root or with root privileges, procmail will be able to
perform as a functionally enhanced, backwards compatible mail delivery agent.
.PP
Procmail can also be used as a general purpose mail filter, i.e. provisions
have been made to enable procmail to be invoked in a special sendmail rule.
.PP
The rcfile format is described in detail in the
.BR procmailrc (5)
man page.
.PP
Examples for rcfile recipes can be looked up in the
.BR procmailex (5)
man page.
.Ss Signals
.Tp 1.2i
.B TERMINATE
Terminate prematurely and requeue the mail.
.Tp
.B HANGUP
Terminate prematurely and bounce the mail.
.Tp
.B INTERRUPT
Terminate prematurely and bounce the mail.
.Tp
.B QUIT
Terminate prematurely and silently lose the mail.
.Tp
.B ALARM
Force a timeout (see
.BR TIMEOUT).
.Sh OPTIONS
.Tp 0.5i
.B \-@VERSIONOPT@
Procmail will print its version number and exit.
.Tp
.B \-@PRESERVOPT@
Preserve any old environment.  Normally procmail clears the environment
upon startup@KEEPENV@.  However, in any case: any default values will override
any preexisting environment variables, i.e. procmail will not pay any attention
to any predefined environment variables, it will happily overwrite them
with its own defaults.
.Tp
.B \-@TEMPFAILOPT@
Make procmail fail softly, i.e. if procmail cannot deliver the mail to
any of the destinations you gave, the mail will not bounce, but will return
to the mailqueue.  Another delivery-attempt will be made at some time in
the future.
.Tp
.I "\fB\-@FROMWHOPT@\fP fromwhom"
Causes procmail to regenerate the leading `@FROM@' line with
.I fromwhom
as the sender (instead of \-@FROMWHOPT@ one could use the alternate and
obsolete \-@ALTFROMWHOPT@).
.Tp
.I "\fB\-@ARGUMENTOPT@\fP argument"
This will set $1 to be equal to
.IR argument .
It can be used to pass meta information along to procmail.  This is
typically done by passing along the $@x information from the sendmail
mailer rule.
.Tp
.I "\fB\-@DELIVEROPT@\fP recipient .\|.\|."
This turns on explicit delivery mode, delivery will be to the local user
.IR recipient .
This, of course, only is possible if procmail has root privileges.
Procmail will setuid to the intended recipients and shall
.I only
read the recipient's @PROCMAILRC@ file (if present, if not, delivery is like
ordinary mail).
.Tp
.B \-@MAILFILTOPT@
Turns procmail into a general purpose mail filter.  In this mode an rcfile
must be specified on the command line.  You should also specify the
envelope sender and one or more envelope recipient addresses on the command
line so that the mail can be transparently resent if needed.
For some typical usage of this option you should look in the
.B EXAMPLES
section below.
.Sh ARGUMENTS
Any arguments containing an '=' are considered to be environment variable
assignments, they will
.I all
be evaluated after the default values have been
assigned and before the first rcfile is opened.
.PP
Any other arguments are presumed to be rcfile paths (either absolute,
or if they start with `@chCURDIR@@MCDIRSEP@' relative to the current
directory;
.B any other relative
path is relative to $HOME); procmail will start with the first one it finds
on the command line.  The following ones will only be parsed if the preceding
ones have a not matching HOST-directive entry, or in case they should not
exist.
.PP
If no rcfiles are specified, it looks for
.BR $HOME/@PROCMAILRC@ .
If not even that can be found, processing will continue according to
the default settings of the environment variables and the ones specified
on the command line.
.Sh EXAMPLES
Examples for rcfile recipes can be looked up in the
.BR procmailex (5)
man page.
A small sample rcfile can be found in the
.B NOTES
section below.
.PP
The
.B \-@MAILFILTOPT@
option is typically used when procmail is called from within a rule in the
sendmail.cf file.  In order to be able to do this it is convenient to create
an extra `procmail' mailer in your sendmail.cf file (in addition to the perhaps
already present `local' mailer that starts up procmail).  To create such a
`procmail' mailer I'd suggest something like:
.Sx 2
Mprocmail, P=@BINDIR@/procmail, F=mSDFMhun, S=11, R=21,
        A=procmail \-@MAILFILTOPT@ $h $f $u
.Ex
This enables you to use rules like the following (most likely in ruleset 0)
to filter mail through the procmail mailer (please note the leading tab
to continue the rule, and the tab to separate the comments):
.Sx 4
R$*<@some.where>$*
        $#procmail $@/etc/some.rc $:$1@some.where.procmail$2
R$*<@somehost.somewhere.procmail>$*
        $1<@somehost.somewhere>$*       Already filtered, map back
.Ex
And /etc/some.rc could be as simple as:
.Sx 6
:0                              # sink all junk mail
* ^Subject:.*junk
/dev/null

:0                              # pass along all other mail
! \-oi \-f "$@"
.Ex
.Sh FILES
.Tp 2.3i
.B /etc/passwd
to set the recipient's LOGNAME, HOME and SHELL variable defaults
.Tp
.B @SYSTEM_MBOX@
system mailbox
.Tp
.B $HOME/@PROCMAILRC@
default rcfile
.Tp
.B @SYSTEM_MBOX@@DEFlockext@
lockfile for the system mailbox (not used by procmail automatically, unless
$DEFAULT equals @SYSTEM_MBOX@ and procmail is delivering to $DEFAULT)
.Tp
.B @DEFsendmail@
default mail forwarder
.Tp
.B @UNIQ_PREFIX@????`hostname`
temporary `unique' zero-length files created by procmail
.Sh "SEE ALSO"
.na
.nh
.BR procmailrc (5),
.BR procmailex (5),
.BR sh (1),
.BR csh (1),
.BR mail (1),
.BR mailx (1),
.BR binmail (1),
.BR uucp (1),
.BR aliases (5),
.BR sendmail (8),
.BR egrep (1),
.BR grep (1),
.BR biff (1),
.BR comsat (8),
.BR lockfile (1),
.BR formail (1),
.BR cron (1)
.hy
.ad
.Sh DIAGNOSTICS
.Tp 2.3i
Autoforwarding mailbox found
The system mailbox had its suid or sgid bit set, procmail terminates with
EX_NOUSER assuming that this mailbox must not be delivered to.
.Tp
Bad substitution of "x"
Not a valid environment variable name specified.
.Tp
Closing brace unexpected
There was no corresponding opening brace (nesting block).
.Tp
Conflicting options
Not all option combinations are useful
.Tp
Couldn't create "x"
The system mailbox was missing and could not/will not be created.
.Tp
Couldn't determine implicit lockfile from "x"
There were no `>>' redirectors to be found, using simply `$LOCKEXT' as
locallockfile.
.Tp
Couldn't unlock "x"
Lockfile was already gone, or write permission to the directory were the
lockfile is has been denied.
.Tp
Deadlock attempted on "x"
The locallockfile specified on this recipe is equal to a still active
$LOCKFILE.
.Tp
Error while writing to "x"
Nonexistent subdirectory, no write permission, pipe died or disk full.
.Tp
Exceeded LINEBUF
Buffer overflow detected, LINEBUF was too small, memory might be corrupted.
.Tp
Excessive output quenched from "x"
The program or filter "x" tried to produce too much output for the current
LINEBUF, discarded the rest.
.Tp
Extraneous x ignored
The action line of this recipe makes x meaningless.
.Tp
Failed forking "x"
Process table is full (and NORESRETRY has been exhausted).
.Tp
Failed to execute "x"
Program not in path, or not executable.
.Tp
Forced unlock denied on "x"
No write permission in the directory where
.B lockfile
"x" resides, or more than one procmail trying to force a lock at exactly the
same time.
.Tp
Forcing lock on "x"
.B Lockfile
"x" is going to be removed by force because of a timeout (see also:
.BR LOCKTIMEOUT ).
.Tp
Invalid regexp "x"
The regular expression "x" contains errors (most likely some missing or
extraneous parens).
.Tp
Kernel-lock failed
While trying to use the kernel-supported locking calls, one of them failed
(usually indicates an OS error), procmail ignores this error and proceeds.
.Tp
Kernel-unlock failed
See above.
.Tp
Lock failure on "x"
Can only occur if you specify some real weird (and illegal) lockfilenames
or if the
.B lockfile
could not be created because of insufficient permissions or nonexistent
subdirectories.
.Tp
Missing closing brace
A nesting block was started, but never finished.
.Tp
Missing name
The \-@FROMWHOPT@ option needs an extra argument.
.Tp
Missing argument
You specified the \-@ARGUMENTOPT@ option but forgot the argument.
.Tp
Missing rcfile
You specified the \-@MAILFILTOPT@ option, procmail expects the name of an
rcfile as argument.
.Tp
Missing recipient
You specified the \-@DELIVEROPT@ option or called procmail under a different
name, it expects one or more recipients as arguments.
.Tp
Out of memory
The system is out of swap space (and NORESRETRY has been exhausted).
.Tp
Processing continued
The unrecognised options on the command line are ignored, proceeding as
usual.
.Tp
Program failure of "x"
Program that was started by procmail didn't return EX_OK (=@EX_OK@).
.Tp
Skipped: "x"
Couldn't do anything with "x" in the rcfile (syntax error), ignoring it.
.Tp
Suspicious rcfile
The owner of the rcfile was not the recipient, or the directory that contained
it was world writeable (the rcfile was not used)
.Tp
Terminating prematurely whilst waiting for .\|.\|.
Procmail received a signal while it was waiting for .\|.\|.
.Tp
Timeout, terminating "x"
Timeout has occurred on program/filter "x".
.Tp
Truncating "x" and retrying lock
"x" does not seem to be a valid filename or the file is not empty.
.Tp
Rescue of unfiltered data succeeded/failed
A filter returned unsuccessfully, procmail tried to get back the original text.
.Tp
Unexpected EOL
Missing closing quote, or trying to escape EOF.
.Tp
Unknown user "x"
The specified recipient does not have a corresponding uid.
.Sh "EXTENDED DIAGNOSTICS"
.Tp 2.3i
Assigning "x"
Environment variable assignment.
.Tp
Bypassed locking "x"
The mail spool directory was not accessible to procmail, it relied solely
on kernel locks.
.Tp
Executing "x"
Starting program "x".  If it is started by procmail directly (without an
intermediate shell), procmail will show where it separated the arguments
by inserting commas.
.Tp
HOST mismatched "x"
This host was called "x", HOST contained something else.
.Tp
Locking "x"
Creating lockfile "x".
.Tp
Linking to "x"
Creating a hardlink between directory folders.
.Tp
Match on "x"
Condition matched.
.Tp
No match on "x"
Condition didn't match, recipe skipped.
.Tp
Notified comsat: "$LOGNAME@offset:file"
Sent comsat/biff a notice that mail arrived for user $LOGNAME at `offset'
in `file'.
.Tp
Opening "x"
Opening file "x" for appending.
.Tp
Rcfile: "x"
Rcfile changed to "x".
.Tp
Reiterating kernel-lock
While attempting several locking methods, one of these failed.  Procmail will
reiterate until they all succeed in rapid succession.
.Tp
Unlocking "x"
Removing lockfile "x" again.
.Sh WARNINGS
You should create a shell script that uses
.BR lockfile (1)
before invoking your mail shell on any mailbox file other than the system
mailbox (unless of course, your mail shell uses the same lockfiles (local
or global) you specified in your rcfile).
.PP
In the unlikely event that you absolutely need to kill procmail before it has
finished, first try and use the regular kill command (i.e.
.I not
kill -9, see the subsection
.I Signals
for suggestions), otherwise some
.I lockfiles
might not get removed.
.PP
Beware when using the
.B \-@TEMPFAILOPT@
option, if procmail repeatedly is unable to deliver the mail (e.g. due to
an incorrect rcfile), the system mailqueue could fill up.  This could
aggravate both the local postmaster and other users.
.Sh BUGS
After removing a lockfile by force, procmail waits $SUSPEND seconds before
creating a new lockfile so that another process that decides to remove the
stale lockfile will not remove the newly created lock by mistake.
.PP
Procmail uses the regular TERMINATE signal to terminate any runaway filter,
but it does not check if the filter responds to that signal and it only sends
it to the filter itself, not to any of the filter's children.
.Sh MISCELLANEOUS
When appending to regular mailfolders any lines in the body of the message that
look like postmarks are prepended with `@ESCAP@' (disarms bogus mailheaders).
The regular expression that is used to search for these postmarks is:
.Rs
`@FROM_EXPR@'
.Re
.PP
If the destination name used in explicit delivery mode is not in /etc/passwd,
procmail will proceed as if explicit delivery mode was not in effect.
If not in explicit delivery mode and
should the uid procmail is running under, have no corresponding /etc/passwd
entry, then HOME will default to @RootDir@, LOGNAME will default to #uid and
SHELL will default to @BinSh@.
.PP
When in explicit delivery mode, procmail will generate a leading `@FROM@'
line if none is present.  If one is already present@TRUSTED_IDS@ procmail will
leave it intact.
.PP
For security reasons procmail will only use an rcfile if it is owned by the
recipient or if the directory it is contained in, is not world writeable.
.PP
If @SYSTEM_MBOX@ is a bogus mailbox (i.e. does not belong to the recipient,
is unwriteable, is a symbolic link or is a hard link), procmail will upon
startup try to rename it into a file starting with `@BOGUSprefix@' and
ending in an inode-sequence-code.  If this turns out to be impossible,
.B ORGMAIL
will have
.I no
initial value, and hence will inhibit delivery without a proper rcfile.
.PP
When delivering to directories (or to MH folders) you
.B don't
need to use lockfiles to prevent several concurrently running procmail
programs from messing up.
.PP
Delivering to MH folders is slightly more time consuming than delivering
to normal directories or mailboxes, because procmail has to search for
the next available number (instead of having the filename immediately
available).
.PP
On general failure procmail will return EX_CANTCREAT, unless option
.B \-@TEMPFAILOPT@
is specified, in which case it will return EX_TEMPFAIL.
.PP
To make `egrepping' of headers more consistent, procmail concatenates all
continued header fields; but only internally.  When delivering the mail, line
breaks will appear as before.
.PP
If procmail is called under a different name than `procmail' (i.e. if it
is linked to another name and invoked as such), it comes up in explicit
delivery mode, and expects the recipients' names as command line arguments
(as if \-@DELIVEROPT@ had been specified).
.PP
Comsat/biff notifications are done using @COMSATprotocol@.  They are sent off
once when procmail generates the regular logfile entry.  The notification
messages have the following extended format (or as close as you can get when
final delivery was not to a file):
.Rs
$LOGNAME@offset_of_message_in_mailbox@COMSATxtrsep@absolute_path_to_mailbox
.Re
.PP
Whenever procmail itself opens a file to deliver to, it
@KERNEL_LOCKING@.
.PP
Procmail is NFS-resistant and eight-bit clean.
.br
.ne 11
.Sh NOTES
Calling up procmail with the \-@HELPOPT1@ or \-@HELPOPT2@ options will cause
it to display a command-line help and recipe flag quick-reference page.
.PP
@CF_procmail@
In this case your $HOME/@DOT_FORWARD@ (beware, it
.B has
to be world readable) file should contain the line below.  Be sure to include
the single and double quotes, and it
.I must
be an
.I absolute
path.  The `#YOUR_LOGIN_NAME' is not actually a parameter that is required by
procmail, in fact, it will be discarded by sh before procmail ever sees it;
it is however a necessary kludge against overoptimising sendmail programs:
.PP
.na
.nf
@FW_content@
.fi
.ad
.PP
Procmail can also be invoked to postprocess an already filled system
mailbox.  This can be useful if you don't want to or can't use a
$HOME/@DOT_FORWARD@ file (in which case the following script could
periodically be called from within
.BR cron (1),
or whenever you start reading mail):
.Rs
#!/bin/sh

if test -s $@SYSTEM_MBOX@
then
  umask 077
  lockfile \-l3600 $HOME/.newmail.lock
  lockfile \-l3600 \-ml
  cat @SYSTEM_MBOX@ >>$HOME/.newmail &&
   cat /dev/null >@SYSTEM_MBOX@
  lockfile \-mu
  formail \-@FM_SPLIT@ procmail <$HOME/.newmail &&
   rm \-f $HOME/.newmail
  rm \-f $HOME/.newmail.lock
fi
exit 0
.Re
.br
.ne 14
.Ss "A sample small @PROCMAILRC@:"
.na
.nf
PATH=/bin:/usr/bin:@BINDIR@
MAILDIR=$HOME/Mail      #you'd better make sure it exists
DEFAULT=$MAILDIR/mbox
LOGFILE=$MAILDIR/from
:0:
* ^From.*berg
from_me
:0
* ^Subject:.*Flame
/dev/null
.fi
.ad
