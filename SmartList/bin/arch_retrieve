#! /bin/sh
:
#$Id: arch_retrieve,v 1.24 1994/01/11 13:24:36 berg Exp $

test=test		# /bin/test
expr=expr		# /bin/expr
echo=echo		# /bin/echo
ls=ls			# /bin/ls
rm=rm			# /bin/rm
sed=sed			# /bin/sed
cat=cat			# /bin/cat
egrep=egrep		# /bin/egrep
nice=nice		# /bin/nice
formail=formail		# /usr/local/bin/formail

$test -z "$listaddr" &&
 $echo "Don't start this script directly, it is used in rc.request" && exit 64

breakoff_search=64		# the maximum number of matches returned
breakoff_ls=512			# the maximum number of files listed with ls
maxfiles=16			# the maximum number of files returned (per
				# command), this can be overridden with
				# the "maxfiles nnn" command.  Setting it
				# to zero will disable checking.

tmprequest=tmp.request
tmpfrom=tmp.from

archivedir=archive

standalone=$1

from=`$echo "arch_retrieve:" \`$cat $tmpfrom\` requested`
$cat /dev/null >$tmpfrom

case "$X_ENVELOPE_TO" in
  *$list-request*) wrongaddress="" ;;
  *) wrongaddress="WARNING:
	Please try to use '$listreq'
	the next time when issuing archive server requests.
" ;;
esac

$formail -k -xSubject: |
 $sed -e '/^[^a-zA-Z	 ]/,$ d' -e 's/^[	 ]*archive/ARCHIVE/' \
  -e 's/[	 ]archive\/\/*/ /g' |
 (  oldwrongaddress="$wrongaddress"
    wrongaddress="WARNING:
	Please make sure to start the Subject: of requests to the archive-
	server with the word archive.
$wrongaddress"
   sendhelp=""
   ILLEGAL=""
   while read line
   do
      set `cd $archivedir; $echo dummy $line`
      shift
      case "$1" in
	 archive|ARCHIVE) shift
	    $test ! -z "$wrongaddress" && wrongaddress="$oldwrongaddress";;
      esac
      case "$1" in
	 maxfiles|MAXFILES)
	    maxfiles=$2 ;;
	 send|sendme|get|getme|gimme|retrieve|mail|\
	 SEND|SENDME|GET|GETME|GIMME|RETRIEVE|MAIL)
	    shift
	    if $expr $maxfiles = 0 \| $maxfiles \>= $# >/dev/null
	    then
	       while $test $# != 0
	       do
		  case "$1" in
		     */../*|../*|*/..|..|[-/]*)
			$echo $from ILLEGAL "$1" >>$tmpfrom
			$test -z "$ILLEGAL" && ILLEGAL="$1";;
		     *) $echo $from "$1" >>$tmpfrom
		      ( $formail -rt -I"Subject: archive retrieval: $1" \
			 -i"From: $listreq" -A"X-Loop: $listaddr" \
			 -I"Precedence: bulk" <$tmprequest
			$test ! -z "$wrongaddress" && $echo "$wrongaddress"
			cd $archivedir
			if $test -f "./$1"
			then
			   $echo "File: $1"
			   $echo "BEGIN--------------cut here-----------------"
			   $cat "./$1"
			   $echo "END----------------cut here-----------------"
			else
			   $echo "File $1 is not available."
			fi
		      ) | $SENDMAIL $sendmailOPT -t ;;
		  esac
		  shift
	       done
	    else
	       ( $formail -rt -I"Subject: archive retrieval: $line" \
		      -i"From: $listreq" -A"X-Loop: $listaddr" \
		      -I"Precedence: bulk" <$tmprequest
		 $test ! -z "$wrongaddress" && $echo "$wrongaddress"
		 $echo "Your request expanded to more than $maxfiles files."
		 $echo "If you want to receive all of them, use the"
		 $echo "'archive maxfiles $#' command first to raise the"
		 $echo "limit."
	       ) | $SENDMAIL $sendmailOPT -t
	    fi ;;
	 ls|dir|directory|list|show|\
	 LS|DIR|DIRECTORY|LIST|SHOW)
	    shift
	    case "$*" in
	       *[/\ ]..[/\ ]*|..[/\ ]*|*[/\ ]..|..|[-/]*|*\ /*)
		  $echo $from ILLEGAL ls "$line" >>$tmpfrom
		  $test -z "$ILLEGAL" && ILLEGAL="$line";;
	       *)
		  $echo $from ls "$line" >>$tmpfrom
		   ( $formail -rt -I"Subject: archive retrieval: ls $1" \
		      -i"From: $listreq" -A"X-Loop: $listaddr" \
		      -I"Precedence: bulk" <$tmprequest
		     $test ! -z "$wrongaddress" && $echo "$wrongaddress"
		     cd $archivedir
		     $echo "ls -l $line"
		     $echo "BEGIN---------------cut here------------------"
		     $ls -lL "$@" 2>&1 | $sed -e $breakoff_ls'a\
Truncating after '$breakoff_ls' names...' -e ${breakoff_ls}q
		     $echo "END-----------------cut here------------------"
		   ) | $SENDMAIL $sendmailOPT -t ;;
	    esac ;;
	 search|grep|egrep|fgrep|find|\
	 SEARCH|GREP|EGREP|FGREP|FIND)
	    shift; regxp="$1"; shift
	    case "$*" in
	       *[/\ ]..[/\ ]*|..[/\ ]*|*[/\ ]..|..|[-/]*|*\ /*)
		  $echo $from ILLEGAL "$line" >>$tmpfrom
		  $test -z "$ILLEGAL" && ILLEGAL="$line";;
	       *) $echo $from "$line" >>$tmpfrom
		( $formail -rt -I"Subject: archive retrieval: $line" \
		   -i"From: $listreq" -A"X-Loop: $listaddr" \
		   -I"Precedence: bulk" <$tmprequest
		  $test ! -z "$wrongaddress" && $echo "$wrongaddress"
		  cd $archivedir
		  $echo "$line"
		  $echo "BEGIN---------------cut here------------------"
		  $nice $egrep -n -i -e $regxp $* </dev/null 2>&1 |
		   $sed -e $breakoff_search'a\
Truncating after '$breakoff_search' matches...' -e ${breakoff_search}q
		  $echo "END-----------------cut here------------------"
		) | $SENDMAIL $sendmailOPT -t ;;
	    esac ;;
	 ""|\#*) ;;
	 *) $test -z "$sendhelp" && sendhelp="$1" ;;
      esac
   done
   if $test ! -z "$sendhelp" -o ! -z "$ILLEGAL"
   then
       ( $formail -rt -I"Subject: archive retrieval info" \
	  -i"From: $listreq" -A"X-Loop: $listaddr" -I"Precedence: bulk" \
	  <$tmprequest
	 $test ! -z "$wrongaddress" && $echo "$wrongaddress"
	 case "X$sendhelp" in
	    X[Hh][Ee][Ll][Pp]|X[Ii][Nn][Ff][Oo]|X) ;;
	    *) $echo "Unknown command $sendhelp." ;;
	 esac
	 $test ! -z "$ILLEGAL" && $echo "Illegal filename $ILLEGAL requested."
	 $echo ""
	 $echo "This archive server knows the following commands:"
	 $echo ""
	 $echo "get filename ..."
	 $echo "ls directory ..."
	 $echo "egrep case_insensitive_regular_expression filename ..."
	 $echo "maxfiles nnn"
	 $echo ""
	 $echo "Aliases for 'get': send, sendme, getme, gimme, retrieve, mail"
	 $echo "Aliases for 'ls': dir, directory, list, show"
	 $echo "Aliases for 'egrep': search, grep, fgrep, find"
	 $echo ""
	 $echo "Lines starting with a '#' are ignored."
	 $echo "Multiple commands per mail are allowed."
	 $echo "Setting maxfiles to zero will remove the limit."
	 $echo ""
	 $echo "Examples:"
	 $echo "ls latest"
	 $echo "get latest/12"
	 $echo "egrep some.word latest/*"
	 if $test ! -z "$standalone"
	 then
	    $echo ""
	    $test -f help.txt && $cat help.txt
	    $test -f info.txt && $cat info.txt
	 fi
       ) | $SENDMAIL $sendmailOPT -t
   fi
 )

if $test ! -z "$archive_log"
then
  $cat $tmpfrom >>$archive_log
fi
