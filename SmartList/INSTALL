	SmartList Installation guide:

		1. Prerequisites
		2. Installing the scripts
		3. Sharing the scripts on multiple architectures
		4. If you don't have a sendmail compatible mailer
		5. Upgrading from previous versions of SmartList

				---

1. Prerequisites
   -------------

In order to make sure that SmartList works reliably for both remote and
local mail, it has to be run under someone's account.
The recommended procedure would be to create a new account and group named
"list" that is only going to be used to manage SmartList mailinglists.

If you are unable/unwilling to create a new user just for SmartList,
then it should be installed in a separate subdirectory.	 The owner of this
directory will still be able to receive regular mail.

SmartList makes use of the -f option of sendmail.  This option makes sure
that the sender address on the envelope (the From_ line) contains the
proper list address.  In order for this option to work, the user using it
(either "list" or the regular user the lists run under) must be on the
trusted-user-list of sendmail.	To enter the user "list" on the
trusted-user-list simply edit the sendmail.cf file and add a line reading:

Tlist

Restarting sendmail is not necessary.

Sendmail 6.x and later don't need this anymore.	 And even if you have an
older sendmail but can't put this in the sendmail.cf file, the mailinglist
scripts will still work, albeit under less than ideal circumstances.

				---

2. Installing the scripts
   ----------------------

Suppose you have created this pseudo user "list" with a specified home
directory of /home/list

Now create /home/list by hand and make sure that you chown it to "list".
Also chgrp it to "list" now if you created a group for that.  If you
do not have a separate group for the list, you have to make sure that you
change the setting of UMASK in the rc.init file.  By default the group
to which the "list" user belongs can write in many of the files.

Next, make sure that you are running as root (su root) and execute the
"install.sh" script present in this directory by typing something like:

	sh install.sh /home/list

If you are setting up SmartList under your own account, simply creating
a separate directory and running the install.sh script should suffice.

This script will then create two subdirectories (.bin and .etc) in
/home/list.  These directories will be filled with the files contained
in the bin and etc subdirectories here.	 It will also make sure that
the "multigram" program is compiled from the procmail*/src directory and
copied into /home/list/.bin.

	The only program/binary that contains harcoded information is
	the /home/.bin/flist program.  It contains both the name of the user
	that owns the lists ("list" in this case) and the absolute path to
	the mailinglist directory (/home/list in this case).  This is
	needed for security reasons.

	This means that if either the name of the user or the name
	of the directory changes, you'll have to reinstall the mailinglist
	scripts (or at least the flist binary).	 You can treat it as if it
	were an upgrade, see paragraph 5 below for more information.

	This also means that if you like to have several main mailinglist
	directories, you'll need a separately installed flist binary
	for each one of them.  Simply install.sh to every directory anew.
	To conserve space, or to centralise administration, you can then
	(hard)link all files in all the .bin and .etc directories with
	their counterparts (except the flist binaries and anything linked
	to them of course).

Furthermore install.sh will link /home/list/.etc/rc.main to
/home/list/.procmailrc.	 This is of course superfluous (but nondestructive) if
you are still using this account to receive regular mail.

Depending on your mail configuration, if procmail has not been integrated
in the maildelivery system (see procmail*/examples/advanced for more
information on that topic) you should also create a .forward file with an
appropriate content (see "man procmail", the NOTES section at the end).	 This,
however, is only necessary if you created a seperate "list" account.

	Next, edit the /home/list/.etc/rc.init file.	Make sure that
	"domain" is set to the right value, and you can optionally specify a
	"listmaster";  also check if the PATH is correct and make sure
	that procmail and formail are in the path.

On some sites the aliases file is not exactly /usr/lib/aliases, or its format
is slightly incompatible with standard sendmail.  In those cases (for
your own convenience) it would be wise to edit the .bin/createlist script
to display the proper aliases to insert (so that you can cut and paste
in the future).

For further instructions, you should read the "Manual" file, it has
been copied to the /home/list/.etc directory as well, and can serve as a
quick reference.

				---

3. Sharing the scripts on multiple architectures
   ---------------------------------------------

For people that want to run SmartList on a shared filesystem across different
architectures there exists the possibility of using several .bin directories.
Simply use something like:
	sh install.sh /home/list .bin.sun4
to install to a different .bin directory.  Repeat the complete procmail and
SmartList installation for every architecture, specifying a different .bin
directory every time.

				---

4. If you don't have a sendmail compatible mailer
   ----------------------------------------------

As is, SmartList is preconfigured to use sendmail (or a compatible
mailer like smail) to actually transport the mails.  If your system only
supplies a /bin/rmail or /bin/mail to transport mails, then several of
the options used when invoking sendmail will not work.

For these cases you have to edit the /home/list/.etc/rc.init file.
Look for a SENDMAIL assignment.	 Supplied with these scripts is a poor man's
sendmail.  It was installed in the .bin directory belonging to the
list.  Make sure that the SENDMAIL assignment points at the "sendmails" script.
And, of course, don't forget to uncomment the SENDMAIL assignment and
the two sendmailOPT* assigments following it.

				---

5. Upgrading from previous versions of SmartList
   ---------------------------------------------

You can simply use the install.sh script again to install directly over
the old installation IF you customised ONLY the master rc.init and rc.custom
files.	Once you ran the install.sh script, you'll have to merge the changes
you made to the old rc.init file (still there) into the rc.init.new file.

Since the install.sh script will create the .etc/rc.lock file for you,
you have 17 minutes to do that.	 If it should take longer, touch the rc.lock
file every so often.  As soon as the difference between its mtime and the
current time exceeds 17 minutes, the flist programs start delivering mail to
the lists again.

Then cat (yes, use `cat', because you have to preserve any hardlinks) the
rc.init.new file into the rc.init file.

If there are any new entries in the new rc.custom file template, their
omission in the old rc.custom files should not cause any problems (i.e. the
new rc.init already provides the new defaults).

If you customised more than just the rc.init or rc.custom files, you'll
have to make diffs between the old versions of the scripts, then install
the new scripts and then apply back the diffs (probably by hand).

You can quickly verify which files are linked to other files by
simply typing something like:

	showlink rc.init

After you are finished, remove the rc.lock file again.	If it is older
than 17 minutes it is ignored anyway, but it's cleaner this way.
