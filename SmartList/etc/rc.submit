# BEFORE editing this file, you should make sure that it is not linked to
# the master version (../.etc/rc.submit) anymore (i.e. "delink rc.submit"
# if you do not want your changes to affect all archive servers).
#
# New mails can be temporarily stalled by creating the file rc.lock (either in
# ../.etc for all lists or in the current directory for this list only).

#$Id: rc.submit,v 1.37 1994/01/11 13:16:37 berg Exp $

INCLUDERC=$RC_INIT
INCLUDERC=$RC_CUSTOM

#
# The following recipe makes sure that:
#	The mail has a sane size (i.e. it is not inordinately big)
#	It does not look like an administrative request.
#	It wasn't sent by this list itself.
#	It wasn't sent by a daemon (misdirected bounce message perhaps).
# Then check to see if sender is on the accept list.
#

:0 Wch i
* < $size_limit
* $!^($X_COMMAND:|\
Subject:([	 ]*(archive([	 ]+((send|get)(me)?|gimme|retrieve|\
mail|ls|dir(ectory)?|list|show|search|[fe]?grep|find|maxfiles|help|info)\
([	 ]|$)|[	 ]*$)|\
(help|info)[	 ]*$)|[^:]*( (add .* to|(delete|remove) .* from|\
take .* off|put .* on) .* [a-z-]*list|subscri(be|ption))([^a-z-]|$))|\
X-Loop: $listaddr|\
Precedence:.*junk)|^FROM_MAILER
| test yes = "$foreign_submit" && exit 0; \
  formail -X"From " -xFrom: -xReply-To: -xSender: -xResent-From: \
   -xResent-Reply-To: -xResent-Sender: -xReturn-Path: | \
    multigram -b1 -m -l$submit_threshold -x$listaddr -x$listreq accept

  :0 a
   {

     :0
     * $$moderated_flag
     * !^Approved:
     * !? formail -xApproved: | \
	   multigram -b1 -m -l$reject_threshold moderators
     | formail -R"From X-Envelope-From:" -IReturn-Receipt-To: \
	| $SENDMAIL $sendmailOPT `cat moderators`

     #
     # Eliminate duplicate submissions by checking the Message-ID: field.
     #

     :0 Wh :msgid.lock
     | formail -xMessage-ID: | idcheck $idcache_size msgid.cache

     #
     # Check if we need to autosubscribe anyone not on the dist list.
     #

     :0 cW
     * $$force_subscribe
     * !? formail -X"From " -xFrom: -xReply-To: -xSender: -xResent-From: \
	   -xResent-Reply-To: -xResent-Sender: -xReturn-Path: | \
	    multigram -b1 -m -l$submit_threshold -x$listaddr -x$listreq dist
     {
       LOCKFILE=tmp.lock

       :0 whc
       | formail -rt -xTo: >tmp.from

       :0 W :dist.lock
       | sed -e '/^$/,/^-- $/ d' | formail -I "Subject: auto subscribe" \
	  >tmp.request; subscribe <tmp.request && test ! -z "$subscribe_log" \
	   && echo "rc.submit: auto subscribed" >>$subscribe_log

       LOCKFILE
     }

     #
     # Check if this is a digested mailinglist.	 If yes, processing stops
     # here and the mail will be added to the digest.
     #

     :0 W :tmp.lock
     * $$digest_flag
     | digest

     ARCHIVE				# Wipe ARCHIVE from the environment

     #
     # Check if we are the first mailinglist to distribute this message, if so
     # archive the message.
     #

     :0
     * !^X-Mailing-List:
      {
	:0 c
	archive/latest/.

	ARCHIVE=$LASTFOLDER		# Remember where it was archived

	#
	# Truncate the archive to the correct number of files (and
	# possibly other housekeeping chores to keep the archive
	# current).
	#

	:0 c hi
	| arch_trunc
      }

     #
     # Main header munger for submissions passing through this list.
     #

     :0 wfh
     | formail -b -IFrom\  -IReceived: -IReturn-Receipt-To: -IErrors-To: \
	-IX-Pmrqc: -IX-Diagnostic: -iReturn-Path: -iX-Envelope-To: \
	-iX-Envelope-From: -I"Precedence: list" -I"Resent-Sender: $listreq" \
	-a"Resent-From: $listaddr" -A"X-Loop: $listaddr" \
	-a"Subject: Unidentified subject!" -a "$reply_to" \
	-a"X-Mailing-List: <$listaddr> $ARCHIVE"

     #
     # Any other local transformations can be done in rc.out
     #

     INCLUDERC=rc.out

     #
     # The following recipe will distribute the message to the subscribers.
     #

     :0 w: dist.lock
     ! $sendmailOPT $listdist

     #! $sendmailOPT `sed -e '/^(.*)$/ d' dist` ;
     # alternate sendmail call (if you don't have file-including aliases)
     # If you need to use this one, be sure to uncomment its counterpart
     # in .bin/digest as well!


     :0 wfh
     | formail -A "X-Diagnostic: $SENDMAIL $listdist failed"

     HOST=continue_with_rc.request
   }

  :0 A wfh
  | formail -A "X-Diagnostic: Not on the accept list"

  :0 A ch
  * ? test -f accept.txt
  | (formail -i"From: $listreq" -rtA"X-Loop: $listaddr"; \
	   cat accept.txt) | $SENDMAIL $sendmailOPT -t


HOST=continue_with_rc.request
