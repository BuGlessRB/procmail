# BEFORE editing this file, you should make sure that it is not linked to
# the master version (../.etc/rc.submit) anymore (i.e. "delink rc.submit"
# if you do not want your changes to affect all archive servers).
#
# New mails can be temporarily stalled by creating the file rc.lock (either in
# ../.etc for all lists or in the current directory for this list only).

#$Id: rc.submit,v 1.24 1993/07/16 14:52:03 berg Exp $

INCLUDERC=$RC_INIT
INCLUDERC=$RC_CUSTOM

#
# The following recipe makes sure that:
#	The mail has a sane size (i.e. it is not inordinately big)
#	It does not look like an administrative request.
#	It wasn't sent by this list itself.
#	It wasn't sent by a daemon (misdirected bounce message perhaps).
# Then check to see if sender is a subscriber of this mailinglist, and while
# doing so, also check if this subscriber wants to receive copies.
#

:0 Wh
	* < $size_limit
	* $!^$X_COMMAND:
	* !^Subject:([	 ]*(archive([	 ]+((send|get)(me)?|gimme|retrieve|\
	   mail|ls|dir(ectory)?|list|show|help|info)([	 ]|$))|[	 ]*$)|\
	   (help|info)[	 ]*$)|[^:]*( (add .* to|(delete|remove) .* from|\
	   take .* off|put .* on) .* [a-z-]*list|subscri(be|ption))
	* $!^X-Loop: $listaddr
	* !^Precedence:.*junk|^FROM_MAILER
METOO=	| formail -X"From " -xFrom: -xReply-To: -xSender: -xResent-From: \
	    -xResent-Reply-To: -xResent-Sender: | \
	   multigram -b1 -m -l$submit_threshold accept

	:0 A
	* $$moderated_flag
	* !Approved:
	* !? formail -xApproved: | \
	      multigram -b1 -m -l$reject_threshold moderators
	| formail -R"From X-Envelope-From:" -IReturn-Receipt-To: \
	  | $SENDMAIL $sendmailOPT `cat moderators`

#
# Eliminate duplicate submissions by checking the Message-ID: field.
#

	:0 A Wh:msgid.lock
	| formail -xMessage-ID: | idcheck $idcache_size msgid.cache

#
# Check if this is a digested mailinglist.  If yes, processing stops here
# and the mail will be added to the digest.
#

	:0 A W :tmp.lock
	* $$digest_flag
	| digest

	ARCHIVE				# Wipe ARCHIVE from the environment

#
# Check if we are the first mailinglist to distribute this message, if so
# archive the message.
#

	:0 A
	* !^X-Mailing-List:
	{
		:0 c
		archive/latest/.

		ARCHIVE=$LASTFOLDER	# Remember where it was archived

		#
		# Truncate the archive to the correct number of files (and
		# possibly other housekeeping chores to keep the archive
		# current).
		#

		:0 c hi
		| arch_trunc
	}

#
# Main header munger for submissions passing through this list.
#

	:0 A wfh
	| formail -b -IFrom\  -IReceived: -IReturn-Receipt-To: -IErrors-To: \
	   -iReturn-Path: -iX-Envelope-To: -iX-Envelope-From: \
	   -I"Precedence: list" -I"Resent-Sender: $listreq" \
	   -a"Resent-From: $listaddr" -A"X-Loop: $listaddr" \
	   -a"Subject: Unidentified subject!" -a "$reply_to" \
	   -a"X-Mailing-List: <$listaddr> $ARCHIVE"

#
# The following recipe will distribute the message to the subscribers.
#

	:0 A w: dist.lock
	* !? test -z "$foreign_submit$METOO"
	! $sendmailOPT $METOO $listdist

       #! $sendmailOPT $METOO `sed -e '/^(.*)$/ d' dist` ;
	# alternate sendmail call (if you don't have file-including aliases)

result=$?

	:0 A wfh
	* ? test 0 != $result
	| formail -A "X-Diagnostic: $SENDMAIL $listdist failed"

	:0 A wfh
	* ? test -z "$foreign_submit$METOO"
	| formail -A "X-Diagnostic: Not on the subscriber list"

HOST=continue_with_rc.request
