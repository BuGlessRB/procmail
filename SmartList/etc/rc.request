# BEFORE editing this file, you should make sure that it is not linked to
# the master version (../.etc/rc.request) anymore (i.e. "delink rc.request"
# if you do not want your changes to affect all lists).
#
# New mails can be temporarily stalled by creating the file rc.lock (either in
# ../.etc for all lists or in the current directory for this list only).

#$Id: rc.request,v 1.44 1994/04/05 15:33:30 berg Exp $

INCLUDERC=$RC_INIT
INCLUDERC=$RC_CUSTOM

INCLUDERC=$RC_LOCAL_REQUEST_00

LOCKFILE=tmp.lock	# for reusing tmp.(request|from)
			# also makes sure that the load doesn't go sky-high
			# when a lot of mail arrives concurrently

#
# We now check:
#	If the length is roughly within bounds.
#	That it is not a reply or something.
#	That we didn't send it ourselves.
#	That it wasn't sent by a daemon of some kind.
#
# If everything matches, we extract the sender address into tmp.from
#

:0 wh
* < 8192
* $$daemon_bias
* $!^((X-(Loop: $listaddr|Diagnostic:)|$X_COMMAND:)|\
     Subject:(.*[^a-z])?(Re:|erro|change|problem|((can)?not|.*n't)\>))
* -100^0 ^FROM_DAEMON
* 1^0
{
  :0 whc
  | formail -rt -xTo: >tmp.from

#
# Store the whole mail in tmp.request, for later reference.
#

  :0 wc
  | formail -IIn-Reply-To: >tmp.request

#
# Check for a missing Subject: line.
#

  :0 wfh
  * !^Subject:
  | formail -a "Subject: "

  INCLUDERC=$RC_LOCAL_REQUEST_10

###############################################################################
# Reader beware, the following four regular expressions are not for the faint #
# of heart.  It'll suffice to say that they accomplish their intended job 98% #
# of time.								      #
###############################################################################

#
# Is it an archive retrieval command?
#

  :0 HB w
  * ^^(.+$)*Subject:[	 ]*((\(none\))?$(.+$)*(^[	 ]*)+)?\
     ((archive:?([	 ]|$))|(archive:?[	 ]+)?\
     ((send|get)(me)?|gimme|retrieve|mail|ls|dir(ectory)?|list|show|\
      search|[fe]?grep|find|maxfiles)([	 ]|$))
  | arch_retrieve

#
# Is it an unsubscription request?
#

  :0 HB w:dist.lock
  * ^^(.+$)*Subject:[	 ]*(((\(none\))?$(.+$)*(^[ ]*)+)?\
      (signoff|delete|remove|unsub)|\
     ((\(none\))?$(.*$)*)?(.*[^a-z])?(unsubscri|\
      ((delete|remove) .* from|take .* off) .* [a-z-]*list\>))
  | unsubscribe | $SENDMAIL $sendmailOPT `cat tmp.from` \
     ${cc_unsubrequests:+$maintainer}

#
# Is it a subscription request?	 Yes, well, then check if the person
# subscribing isn't on the reject list.	 If not, then let's see if he might
# already be on the mailinglist.  If not, add him(/her/it?).
#

  :0 HB
  * $!${auto_subscribe:+!}
  * ^^(.+$)*Subject:[	 ]*(\
     ((\(none\))?$(.+$)*(^[	 ]*)+)?(signon|add|sub(scri|[	 ]|$)?)|\
     ((\(none\))?$(.*$)*)?\
      (.*[^a-z])?(subscri|(add .* to|put .* on) .* [a-z-]*list\>))
  * !? multigram -b1 -l$reject_threshold reject
  * !? formail -IIn-Reply-To: | \
	multigram -b1 -x$listreq -x$listaddr -l$reject_threshold dist
   {
     :0 W ${cc_requests:+c}:dist.lock
     | subscribe

     :0 awfh
     | formail -A "X-Diagnostic: Added to the subscriber list"

     :0 Ewfh
     | formail -A "X-Diagnostic: Tried to subscribe"
   }

#
# Is it an info or help request?  Send back the help.txt and the
# optional info.txt file.
#

  :0 hHB w ${cc_requests:+c}
  * ^^(.+$)*Subject:[	 ]*((\(none\))?$(.+$)*(^[	 ]*)+)?\
     [a-z,.	 ]*(help|info(rm(ation)?)?)\>
  | (formail -i"From: $listreq" -rtA"X-Loop: $listaddr"; \
     cat help.txt info.txt 2>/dev/null ) | $SENDMAIL $sendmailOPT -t

  INCLUDERC=$RC_LOCAL_REQUEST_20
}

#
# Could it be a bounce message from a daemon?  Hand it down to procbounce
# which will evaluate it.
#

:0 wic
* $!^(Subject:(.*[^a-z])?Re:|\
     X-(Loop: $listaddr|Diagnostic:)|$X_COMMAND:)
* ^FROM_DAEMON
| sed -e $cutoff_bounce' q' >tmp.request

  :0 Ahfw
  | procbounce

#
# Or is it a remote X-Command from our maintainer?
#

:0 wf:dist.lock
* $^$X_COMMAND:.*$maintainer[	 ]*$X_COMMAND_PASSWORD
* $!^X-Loop: $listaddr
| x_command

LOCKFILE				# we don't need the lockfile anymore

#
# Anything not taken care of yet will be served to the maintainer of the list.
#
# To make it easier on him, we include a small hint about what might be the
# problem (by adding X-Diagnostic: fields to the header).
#

:0 wfh
* !< $size_limit
| formail -A "X-Diagnostic: Submission size exceeds $size_limit bytes"

:0 wfh
* ^FROM_DAEMON
| formail -A "X-Diagnostic: Mail coming from a daemon, ignored"

:0 HB wfh
* $^X-Loop: $listaddr
| formail -A "X-Diagnostic: Possible loopback problem"

:0
* !^X-(Diagnostic|Processed):
{
  :0 wfh
  * $^$X_COMMAND:
  | formail -A "X-Diagnostic: Suspicious $X_COMMAND format"

  :0 HB wfh
  * ? multigram -b1 -l$reject_threshold reject
  | formail -A "X-Diagnostic: Found on the reject list" \
     -A "X-Diagnostic: `multigram -b1 -l$reject_threshold reject`"

  :0 HB wfh
  * ^((Subject:)?[a-z,. ]*(add|sub.*[@!])|(.*[^a-z])?(signon|subscri.*|\
			      (add .* to|put .* on) .* list)\>)
  * ? formail -IIn-Reply-To: | \
       multigram -b1 -x$listreq -x$listaddr -l$reject_threshold dist
  | formail -A "X-Diagnostic: Already on the subscriber list" \
     -A "X-Diagnostic: `multigram -b1 -x$listreq -x$listaddr \
     -l$reject_threshold dist`"
}

INCLUDERC=$RC_LOCAL_REQUEST_30

:0 wfh
* !^X-(Diagnostic|Processed):
| formail -A"X-Diagnostic: Unprocessed"

:0 wfh
| formail -A"X-Envelope-To: $X_ENVELOPE_TO"

#
# If this list does not have a maintainer e-mail address, drop things in
# the file request.
#

LOGABSTRACT=yes

:0:
* ?test -z "$maintainer"
request

:0 w
| formail -R"From X-Envelope-From:" -iDate: -iReturn-Receipt-To: \
   | $SENDMAIL $sendmailOPT $sendmailOPTp $maintainer

:0 wfh
| formail -A"X-Diagnostic: Maintainer $maintainer could not be reached"

HOST=continue_with_../.etc/rc.post
