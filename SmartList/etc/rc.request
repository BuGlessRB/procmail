# BEFORE editing this file, you should make sure that it is not linked to
# the master version (../.etc/rc.request) anymore (i.e. "delink rc.request"
# if you do not want your changes to affect all lists).
#
# New mails can be temporarily stalled by creating the file rc.lock (either in
# ../.etc for all lists or in the current directory for this list only).

#$Id: rc.request,v 1.18 1993/05/28 14:43:06 berg Exp $

INCLUDERC=$RC_INIT
INCLUDERC=$RC_CUSTOM

LOCKFILE=tmp.lock	# for reusing tmp.(request|from)
			# also makes sure that the load doesn't go sky-high
			# when a lot of mail arrives concurrently

#
# We now check:
#	If the length is roughly within bounds.
#	That it is not a reply or something.
#	That we didn't send it ourselves.
#	That it wasn't sent by a daemon of some kind.
#
# If everything matches, we extract the sender address into tmp.from
#

:4whc
< 8192
$!^(X-(Loop: $listaddr|Diagnostic:)|$X_COMMAND)
!^Subject:(.*[^a-z])?(Re:|erro|change|problem|((can)?not|.*n't)([^a-z]|$))
!^FROM_DAEMON
| formail -rt -xTo: >tmp.from

#
# Store the whole mail in tmp.request, for later reference.
#

	:Ac w
	| cat >tmp.request

#
# Check for a missing Subject: line.
#

	:1A wfh
	!^Subject:
	| formail -a "Subject: "

###############################################################################
# Reader beware, the following four regular expressions are not for the faint #
# of heart.  It'll suffice to say that they accomplish their intended job 98% #
# of time.								      #
###############################################################################

#
# Is it an archive retrieval command?
#

	:1HBA w
	^^(.+$)*Subject:[	 ]*($(.+$)*(^[	 ]*)+)?\
	 ((archive([	 ]|$))|(archive[	 ]+)?\
	 ((send|get)(me)?|gimme|retrieve|mail|ls|dir(ectory)?|list|show)\
	 ([	 ]|$))
	| arch_retrieve

#
# Is it an unsubscription request?
#

	:1HBA w:dist.lock
	^^(.+$)*Subject:[	 ]*(($(.+$)*(^[	 ]*)+)?(delete|remove|unsub)|\
	 ($(.*$)*)?(.*[^a-z])?(unsubscri|\
	 ((delete|remove) .* from|take .* off) .* [a-z-]*list([^a-z]|$)))
	| unsubscribe | $SENDMAIL $sendmailOPT `cat tmp.from`

#
# Is it a subscription request?	 Yes, well, then check if the person
# subscribing isn't on the reject list.	 If not, then let's see if he might
# already be on the mailinglist.  If not, add him.
#

	:3HBA w:dist.lock
	^^(.+$)*Subject:[	 ]*(\
	 ($(.+$)*(^[	 ]*)+)?(add|sub(scri|[	 ]|$)?)|\
	 ($(.*$)*)?(.*[^a-z])?(subscri|(add .* to|put .* on) .* [a-z-]*list\
	 ([^a-z]|$)))
	!?multigram -b1 -l$reject_threshold reject
	!?multigram -b1 -l$reject_threshold dist
	| subscribe | $SENDMAIL $sendmailOPT -t

#
# Is it an info or help request?  Send back the help.txt file.
#

	:1HBA w
	^^(.+$)*Subject:[	 ]*($(.+$)*(^[	 ]*)+)?\
	 [a-z,.	 ]*(help|info(rm(ation)?)?)([^a-z]|$)
	| (formail -i"From: $listreq" -rtA"X-Loop: $listaddr"; \
	   cat help.txt) | $SENDMAIL $sendmailOPT -t

#
# Could it be a bounce message from a daemon?  Hand it down to procbounce
# which will evaluate it.
#

:3wc
!^Subject:(.*[^a-z])?Re:
$!^(X-(Loop: $listaddr|Diagnostic:)|$X_COMMAND)
^FROM_DAEMON
| sed -e $cutoff_bounce',$ d' >tmp.request

	:Ahfw
	| procbounce

#
# Or is it a remote X-Command from our maintainer?
#

:2wf:dist.lock
$^$X_COMMAND:.*$maintainer.*$X_COMMAND_PASSWORD
$!^X-Loop: $listaddr
| x_command `formail -x$X_COMMAND:`

LOCKFILE				# we don't need the lockfile anymore

#
# Anything not taken care of yet will be served to the maintainer of the list.
#
# To make it easier on him, we include a small hint about what might be the
# problem (by adding X-Diagnostic: fields to the header).
#

:wfh
!< $size_limit
| formail -A "X-Diagnostic: Submission size exceeds $size_limit bytes"

:wfh
^FROM_DAEMON
| formail -A "X-Diagnostic: Mail coming from a daemon, ignored"

:HB wfh
$^X-Loop: $listaddr
| formail -A "X-Diagnostic: Possible loopback problem"

:ch
!^X-(Diagnostic|Processed):
/dev/null

	:1A wfh
	$^$X_COMMAND:
	| formail -A "X-Diagnostic: Suspicious $X_COMMAND format"

	:1A HB wfh
	?multigram -b1 -l$reject_threshold reject
	| formail -A "X-Diagnostic: Found on the reject list" \
	   -A "X-Diagnostic: `multigram -b1 -l$reject_threshold reject`"

	:2A HB wfh
	^((Subject:)?[a-z,.	 ]*(add|sub.*[@!])|(.*[^a-z])?(subscri.*|\
				      (add .* to|put .* on) .* list)([^a-z]|$))
	?multigram -b1 -l$reject_threshold dist
	| formail -A "X-Diagnostic: Already on the subscriber list" \
	   -A "X-Diagnostic: `multigram -b1 -l$reject_threshold dist`"

:0wfh
| formail -A"X-Envelope-To: $X_ENVELOPE_TO"

#
# If this list does not have a maintainer e-mail address, drop things in
# the file request.
#

LOGABSTRACT=yes

::
?test -z "$maintainer"
request

:0w
| formail -R"From X-Envelope-From:" -iReturn-Receipt-To: \
   | $SENDMAIL $sendmailOPT $sendmailOPTp $maintainer

:0wfh
| formail -A"X-Diagnostic: Maintainer $maintainer could not be reached"

HOST=continue_with_../.etc/rc.post
